plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springManagementVersion"
}

group = 'com.example'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of("$javaLanguageVersion")
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	implementation "com.google.code.findbugs:jsr305:$googleFindBugsVersion"

	implementation "org.mapstruct:mapstruct:$mapStructVersion"

	implementation "io.jsonwebtoken:jjwt:$jsonWebTokenVersion"

	implementation "javax.xml.bind:jaxb-api:$jaxbApiVersion"

	runtimeOnly "org.yaml:snakeyaml:$snakeyamlVersion"
	runtimeOnly "info.picocli:picocli:$picocliVersion"

	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	annotationProcessor "org.projectlombok:lombok"

	compileOnly "org.projectlombok:lombok"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
